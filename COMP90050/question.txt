Database Architectures: (  ); Client-server; Distributed database systems; World Wide Web; Grid databases; P2P databases.
Database Architectures: Centralised database systems; (  ); Distributed database systems; World Wide Web; Grid databases; P2P databases.
Database Architectures: Centralised database systems; Client-server; (  ); World Wide Web; Grid databases; P2P databases.
Database Architectures: Centralised database systems; Client-server; Distributed database systems; (  ); Grid databases; P2P databases.
Database Architectures: Centralised database systems; Client-server; Distributed database systems; World Wide Web; (  ); P2P databases.
Database Architectures: Centralised database systems; Client-server; Distributed database systems; World Wide Web; Grid databases; (  ).
Centralised database systems: • Data is stored in (  ) • System may contain several processors • System administration is simple • Optimisation process is generally very effective • Well proven database technology • May not be suitable for applications that require data distribution • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several ( ) • System administration is simple • Optimisation process is generally very effective • Well proven database technology • May not be suitable for applications that require data distribution • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several processors • System administration is ( ) • Optimisation process is generally very effective • Well proven database technology • May not be suitable for applications that require data distribution • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several processors • System administration is simple • Optimisation process is generally ( ) • Well proven database technology • May not be suitable for applications that require data distribution • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several processors • System administration is simple • Optimisation process is generally very effective • ( ) database technology • May not be suitable for applications that require data distribution • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several processors • System administration is simple • Optimisation process is generally very effective • Well proven database technology • May not be suitable for applications that require ( ) • Most dominant technology even now
Centralised database systems: • Data is stored in one location • System may contain several processors • System administration is simple • Optimisation process is generally very effective • Well proven database technology • May not be suitable for applications that require data distribution • Most ( ) technology even now
Client-server: • Processing is shared between ( ) processes and server processes • Client and server may be in different locations • Client generally provides user interfaces for input and output • Server provides all the necessary database functionality • System administration is relatively simple • System recovery is similar to centralised database systems
Client-server: • Processing is shared between client processes and server processes • Client and server may be in ( ) locations • Client generally provides user interfaces for input and output • Server provides all the necessary database functionality • System administration is relatively simple • System recovery is similar to centralised database systems
Client-server: • Processing is shared between client processes and server processes • Client and server may be in different locations • Client generally provides user ( ) for input and output • Server provides all the necessary database functionality • System administration is relatively simple • System recovery is similar to centralised database systems
Client-server: • Processing is shared between client processes and server processes • Client and server may be in different locations • Client generally provides user interfaces for input and output • ( ) provides all the necessary database functionality • System administration is relatively simple • System recovery is similar to centralised database systems
Client-server: • Processing is shared between client processes and server processes • Client and server may be in different locations • Client generally provides user interfaces for input and output • Server provides all the necessary database functionality • System ( ) is relatively simple • System recovery is similar to centralised database systems
Client-server: • Processing is shared between client processes and server processes • Client and server may be in different locations • Client generally provides user interfaces for input and output • Server provides all the necessary database functionality • System administration is relatively simple • System recovery is similar to ( )
Distributed database systems: • Data is distributed across several ( ) • ( ) are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some ( ) • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the (  )) of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary ( ), recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, ( ) and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and ( ) processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process ( ) efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very ( ) • System administration is very hard • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is ( ) • System recovery after a crash is complicated • Potential reliability with replication but it may introduce more problems
Distributed database systems: • Data is distributed across several nodes • Nodes are connected by some communication network • Users do not need to know the location of data • System provides necessary concurrency, recovery and transaction processing • Hard to process queries efficiently • Transaction processing can be very inefficient • System administration is very hard • System recovery after a crash is ( ) • Potential reliability with replication but it may introduce more problems
World Wide Web: • Data is stored in ( ) locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is ( ) • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of ( ) • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • ( ) process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no ( ) except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • ( ) could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of ( )) • Very convenient to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very ( ) to use • Notions of transactions is much more difficult to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more ( ) to enforce • RDB models are slowly appearing in WWW systems
World Wide Web: • Data is stored in many locations • Data consistency is not guaranteed • Several owners of data and therefor no certainty of availability and consistency • Optimisation process is generally very ineffective • Evolving database technology – no standards except for XML/HTTP • Security could be a potential problem • Multiple source for accessing data (topic of source trusting) • Very convenient to use • Notions of transactions is much more difficult to enforce • ( ) models are slowly appearing in WWW systems